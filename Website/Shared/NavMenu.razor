@* <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MythicalToyMachine</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div> *@
@using Microsoft.EntityFrameworkCore;
@using MythicalToyMachine.Data;
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authorization;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor _httpContextAccessor
@inject HttpClient Http
@inject IDbContextFactory<PostgresContext> dbcontext
@inject IUserRoleService userRoleService

<nav class="navbar navbar-expand-md navbar-light fixed-top">
    <div class="container">
        <a class="navbar-brand" href="#"><img src="/images/logo.png" alt="Your Company Logo" height="30" /></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="../shop"><i class=""></i>Shop</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="../MyCreations"><i class=""></i>Creations</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="../cart"><span class="oi oi-cart"></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="../"><i class="oi oi-home"></i></a>
                </li>
                @if (userRoleService.IsAuthenticated)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/identity/logout"><i class="oi oi-account-logout"></i></a>
                    </li>
                }
                else
                {                  
                    <li class="nav-item">
                        <a class="nav-link" href="/identity/login"><i class="oi oi-person"></i></a>
                    </li>
                }
                @if (userRoleService.IsAuthenticated && role == "admin")
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/manager"><i class="oi oi-people"></i></a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/imageUpload"><i class="oi oi-image"></i></a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>



@* <div style="display: flex;">
    <div style="flex: 1" class="nav-item">
        <NavLink class="nav-link" href="">
            <span class="oi oi-home" aria-hidden="true"></span> Home
        </NavLink>
    </div>
    @if(userRoleService.IsAuthenticated)
    {
        <div style="flex: 1" class="nav-item justify-content-end">
            <NavLink class="nav-link" href="/identity/logout">
                <LoginControl />
            </NavLink>
        </div>
    }
    else
    {
        <div style="flex: 1" class="nav-item justify-content-end">
            <NavLink class="nav-link" href="/identity/login">
                <LoginControl />
            </NavLink>
        </div>
    }
    @if (userRoleService.IsAuthenticated) @*  && role != "admin") 
    {
        <div style="flex: 1" class="nav-item justify-content-end">
            <NavLink class="nav-link" href="cart">
                <span class="oi oi-cart" aria-hidden="true"></span>
                My Cart
        </NavLink>
        </div>
    }
    @if(userRoleService.IsAuthenticated && role == "admin")
    {
        <div style="flex: 1" class="nav-item justify-content-end">
            <NavLink class="nav-link" href="manager">
                <span class="oi oi-person" aria-hidden="true"></span> Manager
            </NavLink>
        </div>

        <div style="flex: 1" class="nav-item justify-content-end">
            <NavLink class="nav-link" href="imageUpload">
                <span class="oi oi-image" aria-hidden="true"></span> Upload
            </NavLink>
        </div>
    }

</div>
 *@


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private ClaimsPrincipal User;
    private int userId { get; set; }
    private string? role { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User = _httpContextAccessor.HttpContext.User;
        var GoogleUser = User.Identities.FirstOrDefault();
        if (GoogleUser.IsAuthenticated)
        {
            userId = await userRoleService.LookUpUserAsync(GoogleUser.FindFirst(ClaimTypes.Email).Value,
                GoogleUser.FindFirst(ClaimTypes.Name).Value,
                GoogleUser.FindFirst(ClaimTypes.Surname).Value
                );
            if (userRoleService.IsAuthenticated)
            {
                var context = dbcontext.CreateDbContext(); // userRoleService.GetPostgresContext();
                var customer = await context.Customers.Where(c => c.Id == userId)
                                              .Include(c => c.CustomerRole)
                                              .FirstOrDefaultAsync();
                role = customer.CustomerRole.RoleDescription;
            }
        }
    }
}
